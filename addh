#!/bin/bash
# This script will create a C file with the epitech Header
# Usage: ./touch_h [file_name]

#Rend utilisable les commandes dans func dans se fichier
#Pour l'image c'est le même principe que le include en c
source func

filename=""
ok_select=true
#Vérifie s'il n'y a pas le -u
if [ "$1" != "-u" ]
then
    script-manager
fi
# Vérifie le nombre d'arguments
if (( $# < 1 )) || (( $# > 2 )); then
    echo "Usage: ./addh [-d] [file_name]"
    exit 84
fi
#Parcour les arguments
for arg in "$@"
do
    #Vérifie que l'argument ne commence pas par un -
    if [[ $arg != -* ]]; then
        filename=$arg
        break
    fi
done

# Vérifie si le fichier existe déjà donne une erreur si c'est le cas
if [ -f "$filename.h" ]; then
    echo "Error: File $filename.h already exists"
    exit 84
fi



# Récupère le répertoire du projet
project_dir=$(get_current_folder)
# Trouve tous les fichiers d'en-tête et convertit leur chemin en chemin relatif
for header in $(find $project_dir -type f -name "*.h"); do
    # Convertis le chemin absolu en un chemin relatif par
    # rapport au répertoire du projet
    relative_path=$(realpath --relative-to=$project_dir $header)
    # Ajoute les fichiers d'en-tête trouvés dans le repo à une liste.
    headerfiles+=" $(realpath --relative-to=$(pwd) $header)"
done

# Si des fichiers d'en-tête ont été trouvés, permettent à
# l'utilisateur de choisir ceux à inclure
headerfiles=("" ${headerfiles[@]})
# Vérifie si dans la liste headerfiles il y a au moins 1 fichier d'en-tête
if [ "${#headerfiles[@]}" -gt 1 ]; then
    # Boucle sur l'ensemble des fichiers d'en-tête afin de les afficher
    # sur le terminal.
    for index in "${!headerfiles[@]}"; do
        #Vérifie que nous somme sur le 1er tour de boucle
        if [ $index -eq 0 ]; then
            echo "$index: Aucun"
        else
            # Affiche chaque fichier d'en-tête sur le terminal
            echo "$index: ${headerfiles[$index]}"
        fi
    done
    echo "Entrez les numéros des .h que vous souhaitez utiliser, séparés par des espaces:"
    # Attends que l'utilisateur donne les indices des fichiers d'en-tête.
    read -a selected_indices
    #Vérifie si l'utilisateur à mis la valeur 0 pour choisir les fichiers .h
    for index in "${!selected_indices[@]}"; do
        #Si 0 à était trouvez on mets 
        if [ "${selected_indices[index]}" == "0" ]; then
            ok_select=false
            break
        fi
    done
fi
# Crée le fichier avec le nom donné en argument
touch "$filename.h"
if (( $? != 0 )); then
    echo "Error: Can't create file $filename.h"
    exit 84
fi
# Ajoute le Epi header de Epitech
#add_header filename type
add_header $filename "h"
if $ok_select ; then
    # Récupère les indices des fichiers d'en-tête choisis par l'utilisateur
    for index in "${selected_indices[@]}"; do
        # Ajoute le chemin relatif du fichier d'en-tête dans le fichier créé.
        echo -e "#include \"${headerfiles[$index]}\"" >> "$(pwd)/$filename.h"
    done
fi

#Mets le nom du fichier en Majuscule
filename_upper=$(echo "$filename" | tr '[:lower:]' '[:upper:]')
#Ajoute le ifndef, ect
echo -e "#ifndef $filename_upper"_H"\n    #define $filename_upper"_H"\n#endif" >> "$(pwd)/$filename.h"
G='\033[0;32m'
NC='\033[0m'
RED='\e[0;31m'
#Indique à l'utilisateur que le fichier a bien été créé
echo -e "${G}file $filename.h has been created${NC}"
#Lance vscode
code $filename.h
#Indique à l'utilisateur que le fichier est entrain d'être charger
echo -e "${RED}Loading resources...${NC}"