#!/bin/bash
PING_TARGET="www.google.com"

if ! ping -c 1 "$PING_TARGET" &> /dev/null; then
    exit 1
fi

REPO_URL="https://raw.githubusercontent.com/lagie-marin/utility-scripts-template/main/"
DOWNLOAD_PTR_URL="$REPO_URL/download.ptr"
SCRIPTS=($(curl -s -L "$DOWNLOAD_PTR_URL" | head -n 1))
LOCAL_FOLDER="/usr/local/bin/"
DEST_FOLDER="/usr/utility-scripts-template/"

function get_library_repo {
    while true; do
        read -p "Enter the HTTPS link to the library repository: " lib_repo
        if [[ "$lib_repo" =~ ^https://.*\.git$ ]]; then
            sudo sed -i "6i git clone $lib_repo" "$LOCAL_FOLDER/$script"
            break
        else
            echo "Invalid URL. It should start with 'https://' and end with '.git'. Please try again."
        fi
    done
}

for script in "${SCRIPTS[@]}"; do
    if [ "$script" != "getlib" ]; then
        github_version=$(curl -s -L "$REPO_URL/$script")
        if [ -f "$LOCAL_FOLDER/$script" ]; then
            local_version=$(cat "$LOCAL_FOLDER/$script")
        else
            sudo curl -L "$REPO_URL/$script" -o "$LOCAL_FOLDER/$script"
            sudo chmod +x "$LOCAL_FOLDER/$script"
            echo "$script has been downloaded."
            local_version=$(echo "$github_version")
        fi
        # if [ "$script" == "getlib" ]; then
        #     clone_data=$(sed -n "6p" "$LOCAL_FOLDER/$script")
        #     if [[ "$clone_data" != "git clone https"* ]]; then
        #         get_library_repo
        #     fi
        #     local_version=$(cat "$LOCAL_FOLDER/$script" | sed '6d')
        # fi
        if [[ "$local_version" != "$github_version" ]]; then

            sudo curl -L "$REPO_URL/$script" -o "$DEST_FOLDER/$script"
            echo "$github_version" | sudo tee "$LOCAL_FOLDER/$script" > /dev/null
            sudo chmod +x "$LOCAL_FOLDER/$script"
            if [ "$script" == "getlib" ]; then
                if [[ "$clone_data" == "git clone https"* ]]; then
                    sudo sed -i "6i git clone $lib_repo" "$LOCAL_FOLDER/$script"
                else
                    get_library_repo
                fi
            fi
            echo "$script update done."
        fi
    fi
done
